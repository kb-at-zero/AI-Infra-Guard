info:
  name: pyload-ng
  cve: CVE-2025-61773
  summary: Code injection and XSS vulnerability in pyLoad via unsanitized CNL and Captcha parameters
  details: |
    The pyLoad web interface contains insufficient input validation in both the Captcha script endpoint and Click'N'Load (CNL) Blueprint. This allows untrusted user input to be processed unsafely, enabling attackers to inject arbitrary content into the web UI or manipulate request handling.
    User-supplied parameters from HTTP requests were not adequately validated or sanitized before being used in application logic. This led to potential client-side code execution (XSS) when malicious payloads were submitted through endpoints like `/flash/addcrypted2`.
    A proof of concept demonstrates that submitting a crafted GET request with JavaScript in the `jk` parameter results in reflected XSS:
    
    ```http
    GET /flash/addcrypted2?jk=function(){alert(1)}&crypted=12345 HTTP/1.1
    Host: 127.0.0.1:8000
    Content-Type: application/x-www-form-urlencoded
    ```
    Successful exploitation could allow an attacker to impersonate administrators, steal authentication tokens, and perform unauthorized actions, especially if the web UI is exposed publicly without access restrictions.
  cvss: CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:N
  severity: HIGH
  security_advise: |
    1. Upgrade to pyload-ng version 0.5.0b3.dev91 or later.
    2. Apply strict input sanitization for all user-provided parameters in web-facing endpoints.
    3. Restrict public exposure of the pyLoad Web UI; use authentication and network segmentation where possible.
    4. Monitor logs for suspicious activity related to `/flash/*` endpoints.
rule: version >= "0" && version < "0.5.0b3.dev91"
references:
  - https://github.com/pyload/pyload/security/advisories/GHSA-cjjf-27cc-pvmv
  - https://github.com/pyload/pyload/pull/4624
  - https://github.com/pyload/pyload/commit/5823327d0b797161c7195a1f660266d30a69f0ca
  - https://github.com/pyload/pyload