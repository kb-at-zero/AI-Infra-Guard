name: 🚀 Create Release

on:
  push:
    tags:
      - v*

env:
  RELEASE_NAME: AI-Infra-Guard

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🛒 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📝 Extract latest CHANGELOG entry
        id: tag-message
        run: |
          # 获取标签信息
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          
          # 从 CHANGELOG.md 提取最新版本的内容
          if [ -f "CHANGELOG.md" ]; then
            CHANGELOG_CONTENT=$(awk 'BEGIN {print_section=0;} /^## \[/ {if (print_section == 0) {print_section=1;} else {exit;}} print_section {print;}' CHANGELOG.md)
            
            # 如果成功提取到内容，使用 CHANGELOG 内容
            if [ -n "$CHANGELOG_CONTENT" ]; then
              echo "从 CHANGELOG.md 提取最新版本内容:"
              echo "$CHANGELOG_CONTENT"
              echo "$CHANGELOG_CONTENT" > tag_message.txt
            else
              echo "CHANGELOG.md 中未找到版本信息，使用默认消息"
              echo "Release $TAG_NAME" > tag_message.txt
            fi
          else
            echo "未找到 CHANGELOG.md 文件，使用默认消息"
            echo "Release $TAG_NAME" > tag_message.txt
          fi
          
          echo "tag_message_file=tag_message.txt" >> $GITHUB_OUTPUT

      - name: 📦 Prepare release package
        run: |
          # 创建发布目录
          mkdir -p release-package
          # 复制必要文件
          cp docker-compose.images.yml release-package/docker-compose.yml
          cp -r data release-package/data
          cp README.md release-package/README.md
          cp README_ZH.md release-package/README_ZH.md
          cp LICENSE release-package/LICENSE
          cp CHANGELOG.md release-package/CHANGELOG.md
          mkdir -p release-package/db
          mkdir -p release-package/log
          mkdir -p release-package/uploads
          
          # 获取版本号并修改 docker-compose.images.yml
          VERSION="${{ steps.tag-message.outputs.tag_name }}"
          
          # 替换 docker-compose.images.yml 中的 latest 标签为当前版本号
          sed -i "s/:latest/:${VERSION}/g" release-package/docker-compose.yml
          

      - name: 📦 Create release archive
        run: |
          # 创建压缩包
          cd release-package
          tar -czf ../AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.tar.gz .
          cd ..
          
          # 创建 ZIP 包（Windows 用户友好）
          cd release-package
          zip -r ../AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.zip .
          cd ..

      - name: 🏷️ Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.RELEASE_NAME }} ${{ steps.tag-message.outputs.tag_name }}
          body_path: ${{ steps.tag-message.outputs.tag_message_file }}
          draft: false
          prerelease: false
          files: |
            AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.tar.gz
            AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Release Summary
        run: |
          echo "🎉 Release created successfully!"
          echo "📦 Release: ${{ env.RELEASE_NAME }} ${{ steps.tag-message.outputs.tag_name }}"
          echo "📁 Assets:"
          echo "   - AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.tar.gz"
          echo "   - AI-Infra-Guard-${{ steps.tag-message.outputs.tag_name }}.zip"
          echo "🔗 Release URL: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ steps.tag-message.outputs.tag_name }}"
